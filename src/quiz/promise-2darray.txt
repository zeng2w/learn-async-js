Explain the code execution based on the order of the messages logged in src/quiz/promise-2darray.txt.
/*
Explanation of Code Execution and Message Order:
Initial Call to sum2DArray with a 2D Array:

Logs "Sum called ... ".
Checks if the input is an array and proceeds asynchronously.
Logs "returning from sum" immediately because the function does not wait for the asynchronous operation to complete.
Initial Call to sum2DArray with a String:

Again, logs "Sum called ... ".
Quickly determines the input is not an array and proceeds to rejection.
Logs "rejecting ... ".
Logs "returning from sum" immediately for the same reason as above.
Asynchronous Resolution:

The setTimeout callback is queued in the event loop to run after the current call stack is empty.
Once the event loop picks up the asynchronous operation, it logs "resolving ... " for the first call and resolves the promise, which is then caught by the .then() method that logs the sum.
For the second call, the promise is rejected immediately, and the error message is caught by the .catch() method.
*/
